---
layout: post
title:  "微信退款"
date:   2019-01-01 16:42:13 +0000
categories: xiaochang update
---


退款方法 

     /**
       * 退款
       */
      public function refund()
      {
        $order_num = request()->param('order_num');  //订单号
        //查询订单信息
        $order = Db::table('orders')->where('order_num',$order_num)->field('id,total,stotal,integral,uid,openid,sty,status,pay_status')->find();
        if($order['pay_status'] == 1 && $order['status'] == 0){
              echo '未支付的，或正在退款及以退款的订单不能申请';
          if($order){
            /*有金额支付*/
              $order['return_oid'] = Db::table('order_bcak')->where('order_id',$order['id'])->value('code');
              //$order['out_trade_no'] = $order_num;
               //获取微信配置信息
              $config = get_wechat_pay(); 
              $wxPay = new  \Wechat\WxpayService($config['mchid'],$config['appid'],$config['key']);
                // 获取jssdk需要用到的数据
                $result =  $wxPay->doRefund($order['total'],$order['stotal'],$order_num,$order['return_oid'])；
          if($result){
               //退款成功操作

          }else{
            echo '退款失败';
          }
          }else{
            echo '订单不存在';
          }

      }
      
 微信退款封装类
 
      <?php
      /**
       * 关于微信退款的说明
       * 1.微信退款要求必传证书，需要到https://pay.weixin.qq.com 账户中心->账户设置->API安全->下载证书，证书路径在第119行和122行修改
       * 2.错误码参照 ：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_4
       */
      namespace  Wechat;
      class WxpayService
      {

       //证书路径
        public $SSLCERT_PATH = "/www/wwwroot/coffee/public/cert/apiclient_cert.pem";
        public $SSLKEY_PATH = "/www/wwwroot/coffee/public/cert/apiclient_key.pem";

        protected $mchid;
        protected $appid;
        protected $apiKey;
        public $data = null;
        public function __construct($mchid, $appid, $key)
        {
          $this->mchid = $mchid; //https://pay.weixin.qq.com 产品中心-开发配置-商户号
          $this->appid = $appid; //微信支付申请对应的公众号的APPID
          $this->apiKey = $key;  //https://pay.weixin.qq.com 帐户设置-安全设置-API安全-API密钥-设置API密钥
        }


        /**
         * 退款
         * @param float $totalFee 订单金额 单位元
         * @param float $refundFee 退款金额 单位元
         * @param string $refundNo 退款单号
         * @param string $wxOrderNo 微信订单号
         * @param string $orderNo 商户订单号
         * @return string
         */
        public function doRefund($totalFee, $refundFee,$orderNo, $refundNo)
        {
          $config = array(
            'mch_id' => $this->mchid,
            'appid' => $this->appid,
            'key' => $this->apiKey,
          );
          $unified = array(
            'appid' => $config['appid'],
            'mch_id' => $config['mch_id'],
            'nonce_str' => self::createNonceStr(),
            'total_fee' => intval($refundFee * 100),    //订单金额  单位 转为分
            'refund_fee' => intval($refundFee * 100),    //退款金额 单位 转为分
            'sign_type' => 'MD5',      //签名类型 支持HMAC-SHA256和MD5，默认为MD5
            'out_trade_no'=>$orderNo,    //商户订单号
            'out_refund_no'=>$refundNo,    //商户退款单号
          );
          $unified['sign'] = self::getSign($unified, $config['key']);
          $responseXml = $this->curlPost('https://api.mch.weixin.qq.com/secapi/pay/refund', self::arrayToXml($unified));
          $unifiedOrder = simplexml_load_string($responseXml, 'SimpleXMLElement', LIBXML_NOCDATA);
          //var_dump($unifiedOrder);die;
          if ($unifiedOrder === false) {
            die('parse xml error');
          }
          if ($unifiedOrder->return_code != 'SUCCESS') {
            die($unifiedOrder->return_msg);
          }
          if ($unifiedOrder->result_code != 'SUCCESS') {
            die($unifiedOrder->err_code);
          }
          return true;
        }

        /**
         * 转账
         * @param float $openid 转账的openid
         * @param float $Fee 转账金额 单位元
         * @param string $check_name  OPTION_CHECK不强制校验真实姓名, FORCE_CHECK：强制 NO_CHECK：
         * @param string $desc 企业付款描述信息
         * @param string $trade_no 商户订单号
         * @return string
         */
        public function transfer($openid,$trade_no,$transferFee,$check_name="NO_CHECK",$desc="分账提现")
        {
            $param   = array(
              'mch_appid' => $this->appid,
              'mchid' => $this->mchid,
              'nonce_str' => self::createNonceStr(),
              'amount' => intval($transferFee * 100),    //订单金额  单位 转为分
              'partner_trade_no'=>$trade_no,    //商户订单号
              'openid'    =>    $openid,
              'check_name'=> $check_name, //OPTION_CHECK不强制校验真实姓名, FORCE_CHECK：强制 NO_CHECK：
              'desc'   => $desc,//企业付款描述信息  
              'spbill_create_ip' => $_SERVER['REMOTE_ADDR'],//获取IP  
            );
            $param['sign'] = self::getSign($param, $this->apiKey);
            $responseXml = $this->curlPost('https://api.mch.weixin.qq.com/mmpaymkttransfers/promotion/transfers', self::arrayToXml($param));
            $unifiedOrder = simplexml_load_string($responseXml, 'SimpleXMLElement', LIBXML_NOCDATA);
            if ($unifiedOrder === false) {
              die('parse xml error');
            }
            if ($unifiedOrder->return_code != 'SUCCESS') {
              die($unifiedOrder->return_msg);
            }
            if ($unifiedOrder->result_code != 'SUCCESS') {
              die($unifiedOrder->err_code);
            }
            return true;
        }
