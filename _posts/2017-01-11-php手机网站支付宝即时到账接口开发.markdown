---
layout: post
title:  "php手机网站支付宝即时到账接口开发"
date:   2017-01-11 14:47:13 +0000
categories: xiaochang update
---


记得刚毕业的时候找工作，面试技术的总是问会不会支付接口，当时感觉那么高大上的东西怎么会，现在看来也就那么回事，第三方引用类库的流程都大同小异，本次讲解是基于tp5演示的。
首先在模块下的config.php的配置文件配置参数

              return [
                  'PID' => '2088811083820281',
                  'KEY' => 'wb3j63ujyns8nbubgdzth7walg3ed00a',
              ];
在模块下的common.php中的公共参数配置

            function config_alipay()
            {
                 //合作身份者ID，签约账号，以2088开头由16位纯数字组成的字符串
                 $alipay_config['partner']		= Config('PID');
                 //收款支付宝账号，以2088开头由16位纯数字组成的字符串
                 $alipay_config['seller_id']	= $alipay_config['partner'];
                 // MD5密钥，安全检验码，由数字和字母组成的32位字符串
                 $alipay_config['key']		= Config('KEY');
                 // 服务器异步通知页面路径  post为异步
                 $alipay_config['notify_url'] = ""http://".$_SERVER["HTTP_HOST"]."/Pay/aliPayOk"";   //选择同步或异步传输都可以
                 // 页面跳转同步通知页面路径  get为同步
                 $alipay_config['return_url'] = ""http://".$_SERVER["HTTP_HOST"]."/Pay/aliPayOk"";  //选择同步或异步传输都可以
                 //签名方式
                  $alipay_config['sign_type']    = strtoupper('MD5');
                 //字符编码格式 目前支持utf-8
                 $alipay_config['input_charset']= strtolower('utf-8');
                 //ca证书路径地址，用于curl中ssl校验
                 //请保证cacert.pem文件在当前文件夹目录中
                 $alipay_config['cacert']    = getcwd().'\\cacert.pem';
                 //访问模式,根据自己的服务器是否支持ssl访问，若支持请选择https；若不支持请选择http
                 $alipay_config['transport']    = 'http';
                 // 支付类型 ，无需修改
                 $alipay_config['payment_type'] = "1";	
                  // 产品类型，无需修改
                 $alipay_config['service'] = "alipay.wap.create.direct.pay.by.user";

                 return $alipay_config;
            }
控制器代码如下

              /**
              ** 支付操作
              **/
              public function pay()
              {
                  //引入类
                  require_once("lib/alipay_submit.class.php"); 
                  //商户订单号，商户网站订单系统中唯一订单号，必填
                  $out_trade_no = input('post.order_num');
                  //订单名称，必填
                  $subject = input('post.order_name');
                  //付款金额，必填
                  $total_fee = input('post.price');
                  //收银台页面上，商品展示的超链接，必填
                  $show_url = ;
                  //商品描述，可空
                  $body = ; 

                  //构造请求的参数数组
                  $parameter = array(
                  "service"       => $alipay_config['service'],
                  "partner"       => $alipay_config['partner'],
                  "seller_id"  => $alipay_config['seller_id'],
                  "payment_type"	=> $alipay_config['payment_type'],
                  "notify_url"	=> $alipay_config['notify_url'],
                  // "return_url"	=> $alipay_config['return_url'],
                  "anti_phishing_key"=>$alipay_config['anti_phishing_key'],
                  "exter_invoke_ip"=>$alipay_config['exter_invoke_ip'],
                  "out_trade_no"	=> $out_trade_no,
                  "subject"	=> $subject,
                  "total_fee"	=> $total_fee,
                              "show_url"	=> $show_url,
                  "body"	        => $body,
                  "_input_charset"	=> trim(strtolower($alipay_config['input_charset']))
                  );
                      //获取公共配置参数
                      $alipay_config = config_alipay()
                      //建立请求
                      $alipaySubmit = new \AlipaySubmit($alipay_config);
                      $html_text = $alipaySubmit->buildRequestForm($parameter,"post", "OK");
                      echo $html_text;
              } 
支付返回地址,这里演示是用异步通知

              public function aliPayOk()
              {
                  require_once("lib/alipay_notify.class.php");
                  //获取公共配置参数
                   $alipay_config = config_alipay()
                  //建立请求
                  $alipaySubmit = new \AlipaySubmit($alipay_config);
                   if($verify_result) {//验证成功
                    //获取支付宝的通知返回参数，可参考技术文档中服务器异步通知参数列
                //商户订单号
                $out_trade_no = input('post.out_trade_no);
                //支付宝交易号
                $trade_no = input('post.trade_no);
                //交易状态
                $trade_status = input('post.trade_status);
                      if($_POST['trade_status'] == 'TRADE_FINISHED') {
                  //判断该笔订单是否在商户网站中已经做过处理
                    //如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序
                    //请务必判断请求时的total_fee、seller_id与通知时获取的total_fee、seller_id为一致的
                    //如果有做过处理，不执行商户的业务程序

                  //注意：
                  //退款日期超过可退款期限后（如三个月可退款），支付宝系统发送该交易状态通知

                      //调试用，写文本函数记录程序运行情况是否正常
                      //logResult("这里写入想要调试的代码变量值，或其他运行的结果记录");
                  }else if ($_POST['trade_status'] == 'TRADE_SUCCESS') {
                  //判断该笔订单是否在商户网站中已经做过处理
                    //如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序
                    //请务必判断请求时的total_fee、seller_id与通知时获取的total_fee、seller_id为一致的
                    //如果有做过处理，不执行商户的业务程序	
                  //注意：
                  //付款完成后，支付宝系统发送该交易状态通知

                      //调试用，写文本函数记录程序运行情况是否正常
                      //logResult("这里写入想要调试的代码变量值，或其他运行的结果记录");
                  }
                //——请根据您的业务逻辑来编写程序（以上代码仅作参考）——
                echo "success";		//请不要修改或删除

                 else {
                  //验证失败
                  echo "fail";

                  //调试用，写文本函数记录程序运行情况是否正常
                  //logResult("这里写入想要调试的代码变量值，或其他运行的结果记录");
                 }
              }
